{"pageProps":{"post":{"title":"Docker 関連のトラブル","content":"<h1>Docker 関連のトラブル</h1>\n<hr>\n<p><strong>目次</strong></p>\n<ul>\n<li><a href=\"#1\">(1) Docker Desktop がインストールできない</a></li>\n<li><a href=\"#2\">(2) docker-compose up -d（コンテナ起動）で失敗する</a></li>\n<li><a href=\"#3\">(3) (winpty) docker-compose exec app bash で失敗する</a></li>\n</ul>\n<hr>\n<h2>(1) Docker Desktop がインストールできない <a id=\"1\"></a></h2>\n<h3>問題詳細</h3>\n<p>コンピュータの記憶容量の残りが十分あるにもかかわらず、Docker Desktop がインストールできない場合があります。</p>\n<h3>原因</h3>\n<p>OS が Docker が対応していない古いバージョンであることが原因です。\nDocker が対応している OS のバージョンは、次の通りです（2021.7.12 最終確認）。</p>\n<ul>\n<li>macOS（Intel の CPU を搭載する端末）：<strong>バージョン 10.14（Mojave）以降</strong></li>\n<li>macOS（Apple silicon を搭載する端末）：<strong>Rosetta 2 がインストールされていること</strong>\n<ul>\n<li>以上 2 つは、<a href=\"https://docs.docker.com/docker-for-mac/install/#system-requirements\">Docker のヘルプページ</a>の内容に基づきます。</li>\n</ul>\n</li>\n<li>Windows：Windows 10（詳細なバージョンは <a href=\"https://docs.docker.com/docker-for-windows/install/#system-requirements\">Docker のヘルプページ</a>を参照してください。Windows の Edition（例えば Windows 10 Home や Windows 10 Pro など）によってバージョンが異なります。）</li>\n</ul>\n<h3>→ 解決方法</h3>\n<p>OS のアップデートを試してください。</p>\n<ul>\n<li>macOS をお使いの方は、<a href=\"https://support.apple.com/ja-jp/HT201541\">Apple のサポートページ</a>を参照してください。</li>\n<li>Windows をお使いの方は、<a href=\"https://support.microsoft.com/ja-jp/windows/windows-10-%E3%82%92%E6%9B%B4%E6%96%B0%E3%81%99%E3%82%8B-3c5ae7fc-9fb6-9af1-1984-b5e0412c556a\">Microsoft のサポートページ</a>を参照してください。</li>\n</ul>\n<p>なお、今後も OS のバージョンが古くなると、Docker が動かなくなる可能性があります。OS はこまめにアップデートすると良いでしょう。</p>\n<br>\n<h2>(2) <code>docker-compose up -d</code> （コンテナ起動）で失敗する<a id=\"2\"></a></h2>\n<h3>問題詳細</h3>\n<p>Docker Desktop のインストールには成功したものの、コンテナ起動に失敗する場合があります。<br>\n複数の原因が考えられます。</p>\n<ul>\n<li><a href=\"#2-1\">・原因1（Windows、Mac）</a></li>\n<li><a href=\"#2-2\">・原因2（Windows、Mac）</a></li>\n<li><a href=\"#2-3\">・原因3（Windows、Mac）</a></li>\n<li><a href=\"#2-4\">・原因4（Windows のみ）</a></li>\n</ul>\n<h3>原因1（Windows、Mac）<a id=\"2-1\"></a></h3>\n<p>そもそも Docker Desktop が起動していない場合 <code>docker</code> コマンドを使用することはできません。<br>\nデフォルトでは Docker Desktop は PC 起動時に同時に立ち上がる設定になっていることが多いのですが、PC の状態により起動していないケースもあります。</p>\n<p>Docker Desktop が起動している場合、タスクバー（Windows）やメニューバー（Mac）にクジラのアイコンが <strong>止まって</strong> 表示されます。<br>\nなお、クジラのアイコンが動いているのは起動中という意味です。</p>\n<p>また、コマンドラインからも Docker Desktop のステータスを確認できます。</p>\n<pre><code>docker version\n</code></pre>\n<p>というコマンドを入力した際に</p>\n<pre><code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?\n</code></pre>\n<p>や</p>\n<pre><code>Error response from daemon: dial unix docker.raw.sock: connect: connection refused\n</code></pre>\n<p>というメッセージが表示されなければ、正しく起動できているはずです。</p>\n<h3>→ 原因1の解決方法</h3>\n<p>アプリケーション一覧から Docker のアイコンをクリックし、起動してください。</p>\n<br>\n<h3>原因2（Windows、Mac）<a id=\"2-2\"></a></h3>\n<p>他の起動中の Docker コンテナと衝突して、新しくコンテナが起動できないことがあります。</p>\n<p>例えば、次のようなエラーが表示されます。</p>\n<pre><code>Starting sample_app_1 ... error\n\nERROR: for sample_app_1  Cannot start service app: driver failed programming external connectivity on endpoint sample_app_1 (5xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0): Bind for 0.0.0.0:8000 failed: port is already allocated\n\n...\n</code></pre>\n<h3>→ 原因2の解決方法</h3>\n<p>どのディレクトリのコンテナが衝突しているかわかる場合は、当該ディレクトリに移動してコンテナを終了・破棄します。</p>\n<pre><code>docker-compose down\n</code></pre>\n<p>わからない場合は、次のように<strong>全てのコンテナを終了・破棄</strong>します（コンテナは原則破棄するものなので、特に悪影響はありません）。</p>\n<pre><code>docker stop $(docker ps -aq)\ndocker rm $(docker ps -aq)\n</code></pre>\n<p>再度起動したいコンテナのディレクトリに移動して、<code>docker-compose up -d</code> を試してみてください。</p>\n<br>\n<h3>原因3（Windows、Mac）<a id=\"2-3\"></a></h3>\n<p>Docker Desktop が正常に起動していない場合、次のように表示される場合があります。</p>\n<pre><code>Traceback (most recent call last):\n  File \"urllib3/connectionpool.py\", line 670, in urlopen\n  File \"urllib3/connectionpool.py\", line 392, in _make_request\n  File \"http/client.py\", line 1255, in request\n  File \"http/client.py\", line 1301, in _send_request\n  File \"http/client.py\", line 1250, in endheaders\n...\n</code></pre>\n<h3>→ 原因3の解決方法</h3>\n<p>Docker Desktop を再起動してみてください。</p>\n<br>\n<h3>原因4（Windows ユーザー向け）<a id=\"2-4\"></a></h3>\n<p>やや特殊ですが、過去に Docker Desktop ではなく <a href=\"https://docs.docker.jp/toolbox/overview.html\">Docker Toolbox</a> を使って Docker を使用した経験のある方は、その際の設定が誤って読み込まれてしまうことがあります。</p>\n<p>具体的には、以下のような環境変数が Docker Toolbox によって設定されてしまうことが問題になります。</p>\n<pre><code>DOCKER_HOST\nDOCKER_CERT_PATH\nDOCKER_TLS_VERIFY\nDOCKER_MACHINE_NAME\n</code></pre>\n<h3>→ 原因4の解決方法</h3>\n<p><code>DOCKER_</code> で始まる環境変数を一括して削除します。</p>\n<p>管理者権限で PowerShell を起動し、</p>\n<pre><code>Remove-Item Env:DOCKER_*\n</code></pre>\n<p>と入力してください。</p>\n<h2>(3) <code>(winpty) docker-compose exec app bash</code> で失敗する <a id=\"3\"></a></h2>\n<h3>表記について</h3>\n<p>ここでは、表記を簡単にするため、<strong>Windows でのコマンドと Mac でのコマンドをまとめて「<code>(winpty) docker-compose exec app bash</code>」と書きます</strong>。そのため、Windows の場合は「<code>winpty docker-compose exec app bash</code>」に、Mac の場合は「<code>docker-compose exec app bash</code>」に、それぞれ読み替えてください。</p>\n<h3>問題詳細</h3>\n<p><code>docker-compose up -d</code>（コンテナ起動）には成功したものの、<code>(winpty) docker-compose exec app bash</code> でコンテナに入れない場合があります。</p>\n<h3>原因</h3>\n<p>Dockerfile を一度変更したことがあるにもかかわらず、<code>docker-compose up --build</code> でイメージをビルドし直していない可能性があります。</p>\n<h3>→解決方法</h3>\n<p><code>docker-compose up --build</code> 実行した後に、<code>(winpty) docker-compose exec app bash</code> を実行してみてください。</p>\n"}},"__N_SSG":true}